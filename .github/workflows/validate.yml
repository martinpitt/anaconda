name: validate
on: [push, pull_request_target]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Check if container changed in this PR
        id: check-dockerfile-changed
        run: |
          # the SHA is target branch thanks to pull_request_target trigger
          # add prints for debugging purposes
          git log -1 --oneline ${{ github.sha }}
          git diff --name-only ${{ github.sha }}
          git diff --name-only ${{ github.sha }} | grep -q dockerfile/anaconda-ci/ || exit 2
        continue-on-error: true

      # build container if files for dockerfile changed in the PR
      - name: Build anaconda-ci container
        if: ${{ steps.check-dockerfile-changed.outcome == 'success' }}
        run: CONTAINER_ENGINE=docker make -f Makefile.am anaconda-ci-build

      - name: Run tests in anaconda-ci container
        id: run-unit-tests
        run: echo testing master # XXX test CONTAINER_ENGINE=docker make -f Makefile.am container-ci
        continue-on-error: true

      - name: Upload test and coverage logs
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            tests/test-suite.log
            tests/nosetests.log
            tests/pylint/runpylint*.log
            tests/coverage-*.log

      - name: Set job result
        if: ${{ steps.run-unit-tests.outcome == 'failure' }}
        run: |
          cat tests/test-suite.log
          exit 1
